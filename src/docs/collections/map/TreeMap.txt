构造器
========================================================================================================================
1. new TreeMap<>();
    1.1 默认构造器会创建一颗空树
    1.2 默认使用 key 的自然顺序来构建有序树，所谓自然顺序，意思是 key 的类型是什么，就采用该类型的 compareTo 方法来比较大
    小来决定顺序。例如 key 为 String 类型，就会用 String 类型的 compareTo 方法来比较大小
    1.3 key 的类型必须实现 Comparable 接口。如果不实现，就没办法完成元素大小的比较来实现有序性。比如自定义一个类 User 来
    作为 key，没有实现 Comparable 接口，就没有一个规则比较 User 的大小，无法实现 TreeMap 最重要的有序性

2. new TreeMap<>(Comparator<? super K> comparator);
    2.1 在外部定义一个比较器，实现 Comparator 接口的 compare 方法，就可以自定义对象的比较规则。

put 方法
========================================================================================================================
如果 put 的 key 存在旧值，则返回旧值；否则返回 null；


